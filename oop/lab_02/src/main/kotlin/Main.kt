fun main() {
    try {
        val manager = ShopManager()
        manager.createShop(1, "SPAR", "Улица 1")
        manager.createShop(2, "Пятерочка", "Улица 2")
        manager.createShop(3, "Продуктовый 24/7", "Улица 3")
        manager.createProduct(1, "Помидорка")
        manager.createProduct(2, "Огурчик")
        manager.createProduct(3, "Лучок")
        manager.createProduct(4, "Колбаска")
        manager.createProduct(5, "Соусец")
        manager.createProduct(6, "Кукурузка")
        manager.createProduct(7, "Горошек")
        manager.createProduct(8, "Перчик")
        manager.createProduct(9, "Морковка")
        manager.createProduct(10, "Редиска")
        manager.newBatch(1, "Помидорка", 5, 20)
        manager.newBatch(1, "Огурчик", 5, 15)
        manager.newBatch(1, "Кукурузка", 4, 10)
        manager.newBatch(1, "Редиска", 10, 5)
        manager.newBatch(1, "Помидорка", 5, 200)
        manager.newBatch(1, "Огурчик", 5, 1)
        manager.newBatch(2, "Кукурузка", 4, 102)
        manager.newBatch(2, "Редиска", 10, 52)
        manager.newBatch(2, "Помидорка", 5, 202)
        manager.newBatch(2, "Горошек", 5, 10)
        manager.newBatch(2, "Кукурузка", 4, 12)
        manager.newBatch(2, "Редиска", 10, 52)
        manager.newBatch(3, "Помидорка", 5, 23)
        manager.newBatch(3, "Огурчик", 5, 16)
        manager.newBatch(3, "Кукурузка", 4, 17)
        manager.newBatch(3, "Лучок", 10, 50)
        manager.newBatch(3, "Морковка", 5, 15)
        println(manager.whereIsCheaperShopId("Кукурузка"))
        println(manager.whereIsCheaperShopName("Кукурузка"))
        println(manager.whatCanIBuy(1, 50))
        val toBuy = mutableListOf(Pair(1, 2), Pair(2, 10), Pair(6, 2))
        println(manager.buy(1, toBuy))
        println(manager.buyProfitable(toBuy))
    } catch (e: Exception) {
        println(e)
        return
    }
}